version: '3.9'

name: wildberries

services:
  redis:
    image: redis:latest
    container_name: wildberries_broker
    env_file:
      - .env-not-dev
    ports:
      - "6379:6379"
    restart: on-failure
    networks:
      - main

  postgres:
    image: postgres:latest
    container_name: db
    env_file:
      - .env-not-dev
    ports:
      - "5435:5432"
    restart: on-failure
    networks:
      - main

  app:
    build: .
    tty: true
    env_file:
      - .env-not-dev
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: app
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "8000:8000"
    restart: on-failure
    networks:
      - main

  celery_worker:
    build: .
    env_file:
      - .env-not-dev
    command: sh -c "celery -A wildberies worker -l info"
    depends_on:
      - rabbitmq
      - postgres
      - app
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
    restart: on-failure
    networks:
      - main

  celery_beat:
    build: .
    env_file:
      - .env-not-dev
    container_name: beat_wildberries
    command: sh -c "celery -A wildberies beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - rabbitmq
      - postgres
      - app
      - celery_worker
    restart: on-failure
    networks:
      - main

networks:
  main:

