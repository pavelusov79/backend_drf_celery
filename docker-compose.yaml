version: '3.4'

services:
  rabbitmq:
    image: rabbitmq:latest
    container_name: rmq_wildberries
    networks:
      - main
#    environment:
#      - RABBIMQ_NODENAME=rabbitmq@localhost
#      - RABBITMQ_DEFAULT_USER=guest
#      - RABBITMQ_DEFAULT_PASSWORD=guest
#      - RABBITMQ_DEFAULT_VHOST=/
    env_file:
      - .env-non-dev
    ports:
      - "5675:5672"
      - "15675:15672"
    restart: on-failure

  postgres:
    image: postgres:latest
    container_name: db_wildberries
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=postgres
    env_file:
      - .env-non-dev
    networks:
      - main
    ports:
      - "5435:5432"
    restart: on-failure

  app:
    build: .
    env_file:
      - .env-non-dev
    volumes:
     - .:/usr/src/app
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000 && pg_restore -U wildberries -Ft -d container_wildberries < wildberries_dump.sql"
    container_name: wildberries_app
    tty: true
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "8000:8000"
    networks:
      - main
    restart: on-failure

  celery_worker:
    build: .
    env_file:
      - .env-non-dev
    container_name: celery_wildberries
    command: sh -c "celery -A wildberies worker -l info"
    volumes:
      - .:/usr/src/app
    depends_on:
      - rabbitmq
      - postgres
      - app
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
    networks:
      - main
    restart: on-failure

  celery_beat:
    build: .
    env_file:
      - .env-non-dev
    container_name: beat_wildberries
    command: sh -c "celery -A wildberies beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/usr/src/app
    depends_on:
      - rabbitmq
      - postgres
      - app
      - celery_worker
    networks:
      - main
    restart: on-failure

networks:
  main:

